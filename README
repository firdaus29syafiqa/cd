Research-y prototype of LLDB-based crash dumper.

Linux:

  Requires LLDB build in third_party/{bin/, include/, lib/, ...}, then 

  $ export LD_LIBRARY_PATH=`pwd`/third_party/lib
  $ ulimit -c unlimited
  $ ./m

  This builds a little program that will crash, runs it, uses LLDB API to print
  some information from the core file.

  The output should be something like this:

    ```
    Segmentation fault (core dumped)
    num threads: 1
      thread 0, num frames: 4
        frame 0: Func()
          volatile int x (@ 0x00007fff83fd830c) = 42
          const char * y (@ 0x00007fff83fd8300) = 0x00000000004006c4 ["weewaa"]
        frame 1: main
        ...
    ```

Windows:

  Requires LLDB build in third_party/{bin/, include/, lib/, ...}. Something
  like:

      call "c:\Program Files (x86)\Microsoft Visual Studio 14.0\vc\vcvarsall.bat" amd64
      mkdir build
      cd build
      set PATH=%PATH%;...\swigwin-3.0.5
      call cmake -G Ninja -DCMAKE_INSTALL_PREFIX:PATH=...\PATH_TO_CD\third_party -DLLDB_DISABLE_PYTHON=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo ..\llvm
      cd..
      ninja install
  
  Then :

  First, copy `core` file and `crash` binary from Linux box (LLDB can't load
  minidumps currently).

  > PATH=%PATH%;...\PATH_TO_CD\third_party\bin
  > m.bat
